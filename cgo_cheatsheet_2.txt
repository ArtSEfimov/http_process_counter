
=============================
CGo: Работа с C библиотеками
=============================

1. Подключение заголовков и библиотек
-------------------------------------
В Go-коде используется блок комментария для конфигурации cgo:

/*
#cgo CFLAGS:   -I<путь-к-заголовкам>
#cgo LDFLAGS:  -L<путь-к-библиотекам> -l<имя-библиотеки>
#include "your_header.h"
*/
import "C"

2. Значение флагов
------------------
- `#cgo CFLAGS: -I<path>`
  Указывает путь к заголовочным файлам (.h).

- `#cgo LDFLAGS: -L<path>`
  Указывает путь к библиотекам (.a, .so, .dll).

- `#cgo LDFLAGS: -l<libname>`
  Указывает имя библиотеки (без префикса `lib` и расширения). Например, `-lfoo` ищет `libfoo.a` или `foo.dll`.

3. Варианты использования
-------------------------

1) Прямое подключение исходников C:
   - Положи .c и .h рядом с .go
   - Укажи `#cgo CFLAGS: -I.`
   - Не нужен `LDFLAGS`, cgo сам соберёт .c

2) Подключение статической библиотеки (.a):
   - Собери libfoo.a
   - Укажи `#cgo CFLAGS: -I<path>` и `#cgo LDFLAGS: -L<path> -lfoo`

3) Подключение динамической библиотеки (.so / .dll):
   - Собери или получи foo.dll (Windows)
   - Укажи `#cgo CFLAGS: -I<path>` и `#cgo LDFLAGS: -L<path> -lfoo`
   - Убедись, что .dll доступна во время выполнения

4. Пример
---------
/*
#cgo CFLAGS: -I./clib
#cgo LDFLAGS: -L./clib -lmathlib
#include "mathlib.h"
*/
import "C"

func main() {
    result := C.add(2, 3)
}

=============================
