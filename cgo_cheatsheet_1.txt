# Памятка по cgo: подключение C-функций в Go

## 1. Структура cgo-преамбулы
- Блок `/* ... */` с директивами `#cgo` и `#include` **должен идти вплотную** перед `import "C"`.
- **Никаких пустых строк или других символов** между `*/` и `import "C"`.

```go
/*
#cgo windows CFLAGS: -I${SRCDIR}/c_process_counter
#cgo windows LDFLAGS: -L${SRCDIR}/c_process_counter -lproccount -lpsapi
#include "proccount.h"
*/
import "C"
```

## 2. Переменная SRCDIR
- `SRCDIR` указывает на каталог пакета, где находится текущий Go-файл.
- Для доступа к C-коду в соседней папке используйте `../`:
  ```go
  #cgo windows CFLAGS: -I${SRCDIR}/../c_process_counter
  #cgo windows LDFLAGS: -L${SRCDIR}/../c_process_counter -lproccount -lpsapi
  ```

## 3. Заголовок и реализация
- **proccount.h**:
  ```c
  #ifndef PROCCOUNT_H
  #define PROCCOUNT_H

  #ifdef __cplusplus
  extern "C" {
  #endif

  int countProcessesWin(void);

  #ifdef __cplusplus
  }
  #endif

  #endif // PROCCOUNT_H
  ```
- **proccount.c**:
  ```c
  #include "proccount.h"
  #include <windows.h>
  #include <psapi.h>

  int countProcessesWin(void) {
      DWORD aProcesses[1024], cbNeeded;
      if (!EnumProcesses(aProcesses, sizeof(aProcesses), &cbNeeded)) {
          return -1;
      }
      return (int)(cbNeeded / sizeof(DWORD));
  }
  ```

## 4. Сборка C-библиотеки
- **MinGW (GCC)**:
  ```bash
  gcc -c proccount.c -o proccount.o
  ar rcs libproccount.a proccount.o
  ```
- **MSVC (Visual Studio)**:
  ```bat
  cl /c proccount.c /Fo:proccount.obj
  lib /OUT:proccount.lib proccount.obj
  ```

## 5. Итоговый Go-код
```go
// +build windows
package process_counter

/*
#cgo windows CFLAGS: -I${SRCDIR}/c_process_counter
#cgo windows LDFLAGS: -L${SRCDIR}/c_process_counter -lproccount -lpsapi
#include "proccount.h"
*/
import "C"

import "fmt"

func ProcessCounter() {
    count := C.countProcessesWin()
    fmt.Printf("Processes: %d\n", int(count))
}
```

## 6. Общие ошибки и решения
- **Пустая строка перед `import "C"`** → cgo не распознаёт блок.
- **Отсутствие `-lpsapi`** → ошибки линковки при использовании Windows API.
- **Неправильный путь в `CFLAGS/LDFLAGS`** → `proccount.h` или `libproccount.a` не найдены.
